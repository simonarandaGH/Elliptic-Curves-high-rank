
The "r" function
(C)2023. Simon Aranda

The Tunnell's test for integer candidates for congruent numbers,
it is based on two well-known functions a(n), b(n). 
Where if n is a congruent number then/when: a(n)= 2*b(n).
My function r(n) is defined as:
  If (a==b==0)      then r(n)=1.
  If (b>0 && a==2b) then r(n)=2.
  All other cases,       r(n)=0.

I conjectured that:

- integers with r(n)=1, have odd rank (1,3,...).
- if (n< 1254 && r(n)=1) then rank(n)=1.

- integers with r(n)=2, have even rank (2,4,...).
- if (n<29274 && r(n)=2) then rank(n)=2.

- the total of n with r(n)=(0 or 2) is equal 
to the total of n with r(n)=1,
except for some very small difference.

Distribution 
by r() parity and n mod 8. n up to 4*10^6.

Conjectured
- If r(n)=1, rank(C[n]) odd. If r(n)=2, rank(C[n]) even.
- Distribution r(). Same number of 1s vs "0s or 2s".

Distribution of function r(). Values of 0,1,2,0+2,1+2.

r        total
----   -------
0      1817144   (Not CN)
1      1999993   (Rank odd)
2       182862   (Rank even)
0or2   2000006   (Conjectured: 0or2 == 1).
1or2   2182855   (All CN)

CN distribution by class mod 8
0%8: 278860
1%8:  48497
2%8:  46815
3%8:  34366
4%8: 274317
5%8: 500000  (all are CN)
6%8: 500000  (id)
7%8: 500000  (id)
---- -------
+  : 2182855  (All CN)
---------------------------------------------------


More output:
b: base number
n= core(b)
r= r(b) = r(n)
a,b: the counters.
i: see the program C++.

b  n  r    i  a b
------------------
1, 1, 0;  (1: 2/2) 
2, 2, 0;  (1: 2/2) 
3, 3, 0;  (3: 4/4) 
4, 1, 0;  (1: 2/2) 
5, 5, 1;  (5: 0/0)  CN.
6, 6, 1;  (3: 0/0)  CN.
7, 7, 1;  (7: 0/0)  CN.
8, 2, 0;  (1: 2/2) 
9, 1, 0;  (1: 2/2) 
10, 10, 0;  (5: 4/4) 
11, 11, 0;  (11: 12/4) 
12, 3, 0;  (3: 4/4) 
13, 13, 1;  (13: 0/0)  CN.
14, 14, 1;  (7: 0/0)  CN.
15, 15, 1;  (15: 0/0)  CN.
16, 1, 0;  (1: 2/2) 
17, 17, 0;  (17: 16/4) 
18, 2, 0;  (1: 2/2) 
19, 19, 0;  (19: 12/4) 
20, 5, 1;  (5: 0/0)  CN.
21, 21, 1;  (21: 0/0)  CN.
22, 22, 1;  (11: 0/0)  CN.
23, 23, 1;  (23: 0/0)  CN.
24, 6, 1;  (3: 0/0)  CN.

